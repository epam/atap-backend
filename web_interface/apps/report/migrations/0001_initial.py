# Generated by Django 2.2.5 on 2020-11-30 11:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('task', '0001_initial'),
        ('job', '0001_initial'),
        ('project', '0001_initial'),
        ('framework_data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SummaryParams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('general', models.TextField(null=True)),
                ('testing_standart', models.TextField(null=True)),
                ('testing_type', models.TextField(null=True)),
                ('pages_list_description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'summary_params',
            },
        ),
        migrations.CreateModel(
            name='VpatReportParams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10)),
                ('standart', models.CharField(max_length=255)),
                ('product_description', models.CharField(max_length=255, null=True)),
                ('notes', models.CharField(max_length=255, null=True)),
                ('evaluation_methods', models.CharField(max_length=4000, null=True)),
                ('product_type', models.CharField(max_length=255)),
                ('date', models.DateField(null=True)),
                ('name', models.CharField(default='VPAT', max_length=30)),
                ('product_name_version', models.CharField(default='', max_length=255)),
                ('contact', models.CharField(default='', max_length=255)),
                ('terms', models.CharField(default='<p>The terms used in the Conformance Level information are defined as follows:</p>\n                <ul>\n               <li><b>Supports</b>: The functionality of the product has at least one method that meets the criterion without known defects or meets with equivalent facilitation.</li> \n               <li><b>Partially Supports</b>: Some functionality of the product does not meet the criterion.</li> \n                <li><b>Does Not Support</b>: The majority of product functionality does not meet the criterion.</li> \n                <li><b>Not Applicable</b>: The criterion is not relevant to the product.</li> \n               <li><b>Not Evaluated</b>: The product has not been evaluated against the criterion. This can be used only in WCAG 2.0 Level AAA.</li> \n            </ul>', max_length=1000)),
                ('section_508_note', models.CharField(default='', max_length=255)),
                ('section_en_note', models.CharField(default='', max_length=255)),
                ('applicable_en', models.CharField(default='4,9', max_length=50)),
                ('applicable_508', models.CharField(default='3', max_length=50)),
                ('wcag_a_note', models.CharField(default='', max_length=255)),
                ('wcag_aa_note', models.CharField(default='', max_length=255)),
                ('wcag_aaa_note', models.CharField(default='', max_length=255)),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='job.Job')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project.Project')),
            ],
            options={
                'db_table': 'vpat_report_params',
            },
        ),
        migrations.CreateModel(
            name='SuccessCriteriaLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria', models.CharField(max_length=250, null=True)),
                ('product_type', models.CharField(max_length=250)),
                ('level', models.CharField(max_length=250, null=True)),
                ('remark', models.CharField(max_length=4000, null=True)),
                ('support_level', models.CharField(max_length=3, null=True)),
                ('test_results', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='framework_data.TestResults')),
            ],
            options={
                'db_table': 'success_criteria_level',
            },
        ),
        migrations.CreateModel(
            name='Section508Chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.CharField(max_length=250, null=True)),
                ('note', models.CharField(max_length=1000, null=True)),
                ('report_type', models.CharField(max_length=10, null=True)),
                ('name', models.CharField(max_length=250, null=True)),
                ('applicable', models.BooleanField(default=True)),
                ('report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.VpatReportParams')),
                ('test_results', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='framework_data.TestResults')),
            ],
            options={
                'db_table': 'section_508_chapters',
                'unique_together': {('chapter', 'test_results', 'report')},
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='reports')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task.Task')),
            ],
            options={
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='IssueGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('err_id', models.CharField(max_length=50)),
                ('priority', models.CharField(max_length=250, null=True)),
                ('techniques', models.TextField(null=True)),
                ('intro', models.TextField(null=True)),
                ('example_shows', models.CharField(max_length=10000, null=True)),
                ('type_of_disability', models.CharField(max_length=400, null=True)),
                ('references', models.TextField(null=True)),
                ('recommendations', models.TextField(null=True)),
                ('name', models.CharField(max_length=500, null=True)),
                ('issue_type', models.CharField(max_length=500, null=True)),
                ('wcag', models.CharField(max_length=50)),
                ('is_best_practice', models.BooleanField()),
                ('test_results', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_groups', to='framework_data.TestResults')),
            ],
            options={
                'db_table': 'issue_group',
            },
        ),
        migrations.CreateModel(
            name='AuditReportParams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('introduction', models.TextField(null=True)),
                ('summary', models.TextField(null=True)),
                ('result', models.TextField(null=True)),
                ('conformance', models.TextField(null=True)),
                ('prioritization', models.TextField(null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('summary_params', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.SummaryParams')),
                ('test_results', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='framework_data.TestResults')),
            ],
            options={
                'db_table': 'audit_report_params',
            },
        ),
        migrations.CreateModel(
            name='Section508Criteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria', models.CharField(max_length=250, null=True)),
                ('level', models.CharField(max_length=250, null=True)),
                ('remark', models.CharField(max_length=4000, null=True)),
                ('product_type', models.CharField(max_length=250, null=True)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.Section508Chapters')),
            ],
            options={
                'db_table': 'section_508_criteria',
                'unique_together': {('chapter', 'criteria', 'product_type')},
            },
        ),
        migrations.CreateModel(
            name='ConformanceLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WCAG', models.CharField(max_length=250, null=True)),
                ('level', models.CharField(max_length=250, null=True)),
                ('remark', models.CharField(default='', max_length=100)),
                ('issue_group', models.ManyToManyField(to='report.IssueGroup')),
                ('report_params', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.AuditReportParams')),
            ],
            options={
                'db_table': 'conformance_level',
                'unique_together': {('WCAG', 'report_params')},
            },
        ),
    ]
