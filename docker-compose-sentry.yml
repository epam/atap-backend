version: '3.8'

services:
  sentry-redis:
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    image: redis:6.2.1
    restart: always
    volumes:
      - redis-data:/data

  sentry-postgres:
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    image: postgres:12.2
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${SENTRY_DB_USER}
      POSTGRES_PASSWORD: ${SENTRY_DB_PASSWORD}
      POSTGRES_DB: ${SENTRY_DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  sentry-base:
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    image: sentry:9.1.2
    restart: always
    ports:
      - '9000:9000'
    env_file:
      - .env
    volumes:
      - sentry-data:/var/lib/sentry/files

  sentry-cron:
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    image: sentry:9.1.2
    restart: always
    env_file:
      - .env
    command: "sentry run cron"
    volumes:
      - sentry-data:/var/lib/sentry/files

  sentry-worker:
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    image: sentry:9.1.2
    restart: always
    env_file:
      - .env
    command: "sentry run worker"
    volumes:
      - sentry-data:/var/lib/sentry/files


volumes:
  sentry-data:
  postgres-data:
  redis-data:

